const Rubik = require('../index')
const _ = require('lodash')
const {COLORS} = require('../utils')
describe("test rubik class", () => {
  test("rotate function", () => {
    const rubik = new Rubik()
    expect(rubik.blocks.length).toBe(3)
    expect(rubik.blocks[0].length).toBe(3)
    expect(rubik.blocks[0][0].length).toBe(3)
    expect(_.isEqual(rubik.blocks[0][0][0].getAllColor(), [COLORS.white, -1, -1, COLORS.orange, COLORS.green, -1])).toBeTruthy()
    rubik.rotate('x', 0, -1)
    expect(_.isEqual(rubik.blocks[0][0][0].getAllColor(), [COLORS.white, -1, -1, COLORS.blue, COLORS.orange, -1])).toBeTruthy()
    expect(_.isEqual(rubik.blocks[0][2][2].getAllColor(), [COLORS.white, COLORS.green, -1, -1, -1, COLORS.red])).toBeTruthy()
    rubik.rotate('z', 1, -1)
    expect(_.isEqual(rubik.blocks[0][0][1].getAllColor(), [COLORS.green, -1, -1, -1, COLORS.yellow, -1])).toBeTruthy()
    expect(_.isEqual(rubik.blocks[0][2][1].getAllColor(), [COLORS.orange, -1, -1, -1, -1, COLORS.white])).toBeTruthy()
    rubik.rotate('z', 1, 1)
    rubik.rotate('x', 0, 1)
    expect(_.isEqual(rubik.blocks[0][0][1].getAllColor(), [COLORS.white, -1, -1, -1, COLORS.green, -1])).toBeTruthy()
    expect(_.isEqual(rubik.blocks[0][2][1].getAllColor(), [COLORS.white, -1, -1, -1, -1, COLORS.blue])).toBeTruthy()
  })
  test("display function", () => {
    const rubik = new Rubik()
    rubik.rotateL(1)
    rubik.rotateD(-1)
    rubik.rotateR(-1)
    rubik.rotateU(1)
    // rubik.rotateU(1)
    // rubik.rotateB(1)
    // rubik.rotateB(1)
    // rubik.rotateF(1)
    rubik.display()
  })
  test("shuffle by scramble", () => {
    const rubik = new Rubik()
    rubik.shuffleByScramble("L2 D R2 U' L2 D2 L2 U2 B' D2 F' D B' L' F' D R2")
    rubik.display()
  })
})
